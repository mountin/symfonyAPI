version: '3.8'

services:
  app:
    image: php:8.2-fpm
    container_name: symfony_app
    working_dir: /var/www/symfonyAPI
    volumes:
      - /var/www/symfonyAPI:/var/www/symfonyAPI
    networks:
      - symfony_network
    depends_on:
      - database

  webserver:
    image: nginx:latest
    container_name: symfony_nginx
    ports:
      - "8080:80"
    volumes:
      - /var/www/symfonyAPI:/var/www/symfonyAPI
      - /var/www/symfonyAPI/docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - symfony_network
    depends_on:
      - app
#
#  database:
#    image: mysql:8
#    container_name: symfony_db
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: symfony
#      MYSQL_USER: symfony
#      MYSQL_PASSWORD: symfony
#    ports:
#      - "3306:3306"
#    networks:
#      - symfony_network
#    volumes:
#      - db_data:/var/lib/mysql

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    ports:
      - "5432:5432"  # Проброс порта
    networks:
      - symfony_network
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  symfony_network:

volumes:
  db_data:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
